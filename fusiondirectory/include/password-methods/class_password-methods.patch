--- class_password-methods.inc	2020-11-05 16:39:24.000000000 +0100
+++ class_password-methods.inc	2022-07-13 17:45:20.700547342 +0200
@@ -86,19 +86,19 @@
     }

     /* Get current password hash */
-    $pwd = "";
+    $pwdAccountLockedTime = "";
     if (!empty($dn)) {
       $ldap = $config->get_ldap_link();
       $ldap->cd($config->current['BASE']);
-      $ldap->cat($dn);
+      $ldap->cat($dn, ['pwdAccountLockedTime']);
       $attrs = $ldap->fetch();
-      if (isset($attrs['userPassword'][0])) {
-        $pwd = $attrs['userPassword'][0];
+      if (isset($attrs['pwdAccountLockedTime'][0])) {
+        $pwdAccountLockedTime = $attrs['pwdAccountLockedTime'][0];
       }
-    } elseif (isset($this->attrs['userPassword'][0])) {
-      $pwd = $this->attrs['userPassword'][0];
+    } elseif (isset($this->attrs['pwdAccountLockedTime'][0])) {
+      $pwdAccountLockedTime = $this->attrs['pwdAccountLockedTime'][0];
     }
-    return preg_match("/^[^\}]*+\}!/", $pwd);
+    return $pwdAccountLockedTime == '000001010000Z';
   }

   /*! \brief       Locks an account by adding a '!' as prefix to the password hashes.
@@ -139,22 +139,21 @@

     /* Get current password hash */
     $attrs  = $this->attrs;
-    $pwd    = '';
+    $pwdAccountLockedTime    = '';
     $ldap   = $config->get_ldap_link();
     $ldap->cd($config->current['BASE']);
     if (!empty($dn)) {
-      $ldap->cat($dn);
+      $ldap->cat($dn, ['pwdAccountLockedTime', 'dn']);
       $attrs = $ldap->fetch();
     }
-    if (isset($attrs['userPassword'][0])) {
-      $pwd = $attrs['userPassword'][0];
+    if (isset($attrs['pwdAccountLockedTime'][0])) {
+      $pwdAccountLockedTime = $attrs['pwdAccountLockedTime'][0];
       $dn  = $attrs['dn'];
     }

     /* We can only lock/unlock non-empty passwords */
-    if (!empty($pwd)) {
       /* Check if this entry is already locked. */
-      if (!preg_match("/^[^\}]*+\}!/", $pwd)) {
+      if (!($pwdAccountLockedTime == '000001010000Z')) {
         if ($mode == 'UNLOCK') {
           return TRUE;
         }
@@ -177,15 +176,17 @@
       }

       // (Un)lock the account by modifying the password hash.
+      $ldap->cd($dn);
       if ($mode == 'LOCK') {
         /* Lock entry */
-        $pwd = preg_replace("/(^[^\}]+\})(.*$)/",   "\\1!\\2",  $pwd);
+	      $modify['pwdAccountLockedTime'] = '000001010000Z';
+        $modify['description'] = 'locked';
       } else {
         /* Unlock entry */
-        $pwd = preg_replace("/(^[^\}]+\})!(.*$)/",  "\\1\\2",   $pwd);
+        $modify['description'] = 'unlocked';
+        $ldap->rm(array('pwdAccountLockedTime'=>array()));
       }
-      $modify['userPassword'] = $pwd;
-      $ldap->cd($dn);
+      //$modify['userPassword'] = $pwd;
       $ldap->modify($modify);

       // Call the password post-lock hook, if defined.
@@ -199,7 +200,6 @@
         msg_dialog::display(_('LDAP error'), msgPool::ldaperror($ldap->get_error(), $dn, LDAP_MOD), LDAP_ERROR);
       }
       return $ldap->success();
-    }
     return FALSE;
   }

@@ -312,8 +312,8 @@
       }
     }

-    $method = new passwordMethodClear($dn);
-    $method->set_hash('clear');
+    $method = new passwordMethodsha($dn);
+    $method->set_hash('sha');
     return $method;
   }
